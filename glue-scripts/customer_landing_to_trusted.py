{
	"jobConfig": {
		"name": "customer_trusted_etl_job",
		"description": "This job extracts raw customer data from the landing zone, filters records to include only customers who consented to share their data for research purposes, and writes the cleaned dataset to the trusted zone in S3.",
		"role": "arn:aws:iam::470586301203:role/my-glue-service-role",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 2,
		"maxCapacity": 2,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "customer_trusted_etl_job.py",
		"scriptLocation": "s3://aws-glue-assets-470586301203-us-east-1/scripts/",
		"language": "python-3",
		"spark": false,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-05-06T11:51:58.175Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-470586301203-us-east-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-470586301203-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null,
		"pythonPath": null,
		"logging": false
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\r\nfrom awsglue.transforms import *\r\nfrom awsglue.utils import getResolvedOptions\r\nfrom pyspark.context import SparkContext\r\nfrom awsglue.context import GlueContext\r\nfrom awsglue.job import Job\r\n\r\n## @params: [JOB_NAME]\r\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\r\n\r\nsc = SparkContext()\r\nglueContext = GlueContext(sc)\r\nspark = glueContext.spark_session\r\njob = Job(glueContext)\r\njob.init(args['JOB_NAME'], args)\r\n\r\n# Load raw customer data\r\ncustomer_landing = glueContext.create_dynamic_frame.from_options(\r\n    connection_type=\"s3\",\r\n    format=\"json\",\r\n    connection_options={\"paths\": [\"s3://stedi-project-userthompson/customer_landing/\"]}\r\n)\r\n\r\n# DEBUG: Count total records loaded from landing zone\r\nprint(\"Total customer records from landing zone:\", customer_landing.count())\r\n\r\n# Filter customers who consented to research\r\ncustomer_trusted = Filter.apply(\r\n    frame=customer_landing,\r\n    f=lambda row: row[\"shareWithResearchAsOfDate\"] is not None\r\n)\r\n\r\n# DEBUG: Count how many customers had consent\r\nprint(\"Customer records with shareWithResearchAsOfDate not null:\", customer_trusted.count())\r\n\r\n# Write filtered data to trusted zone\r\nglueContext.write_dynamic_frame.from_options(\r\n    frame=customer_trusted,\r\n    connection_type=\"s3\",\r\n    format=\"json\",\r\n    connection_options={\"path\": \"s3://stedi-project-userthompson/trusted/customer/\"}\r\n)\r\n\r\n# End job\r\njob.commit()\r\n"
}