{
	"jobConfig": {
		"name": "accelerometer_trusted_etl_job",
		"description": "This job reads raw accelerometer data from the landing zone, joins it with trusted customer records to include only users who consented to data sharing, and writes the filtered results to the trusted zone in S3.",
		"role": "arn:aws:iam::470586301203:role/my-glue-service-role",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 2,
		"maxCapacity": 2,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "accelerometer_trusted_etl_job.py",
		"scriptLocation": "s3://aws-glue-assets-470586301203-us-east-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-05-06T12:30:15.171Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-470586301203-us-east-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-470586301203-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\r\nfrom pyspark.context import SparkContext\r\nfrom awsglue.context import GlueContext\r\nfrom awsglue.transforms import *\r\nfrom awsglue.utils import getResolvedOptions\r\nfrom awsglue.job import Job\r\n\r\n# Get job name from arguments\r\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\r\n\r\n# Initialize Glue job\r\nsc = SparkContext()\r\nglueContext = GlueContext(sc)\r\nspark = glueContext.spark_session\r\njob = Job(glueContext)\r\njob.init(args['JOB_NAME'], args)\r\n\r\n# 1. Load raw accelerometer data from the landing zone\r\naccelerometer_landing = glueContext.create_dynamic_frame.from_options(\r\n    connection_type=\"s3\",\r\n    format=\"json\",\r\n    connection_options={\"paths\": [\"s3://stedi-project-userthompson/accelerometer_landing/\"]}\r\n)\r\n\r\n# 2. Load trusted customer data (already filtered for consent)\r\ncustomer_trusted = glueContext.create_dynamic_frame.from_options(\r\n    connection_type=\"s3\",\r\n    format=\"json\",\r\n    connection_options={\"paths\": [\"s3://stedi-project-userthompson/trusted/customer/\"]}\r\n)\r\n\r\n# 3. Join on accelerometer.user = customer.email\r\njoined_data = Join.apply(\r\n    frame1=accelerometer_landing,\r\n    frame2=customer_trusted,\r\n    keys1=[\"user\"],\r\n    keys2=[\"email\"]\r\n)\r\n\r\n# 4. Write the joined (cleaned) data to the trusted/accelerometer folder\r\nglueContext.write_dynamic_frame.from_options(\r\n    frame=joined_data,\r\n    connection_type=\"s3\",\r\n    format=\"json\",\r\n    connection_options={\"path\": \"s3://stedi-project-userthompson/trusted/accelerometer/\"}\r\n)\r\n\r\n# 5. Commit the job\r\njob.commit()\r\n\r\n"
}